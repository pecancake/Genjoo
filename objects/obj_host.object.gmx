<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.variables[| 0] mod 30 = 0
{
    choice=choose(string_replace(string_format(random_range(20,room_width-20),4,0)," ",0)+"-050",string_replace(string_format(random_range(20,room_width-20),4,0)," ",0)+"0820","-050"+string_replace(string_format(random_range(20,room_height-20),4,0)," ",0),"0750"+string_replace(string_format(random_range(20,room_height-20),4,0)," ",0))
    instance_create(real(string_copy(choice,1,4)),real(string_copy(choice,5,4)),obj_enemy)
}
global.variables[| 0]+=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.variables=ds_list_create()
ds_list_add(global.variables,0,0,5,60,false)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_primitive_begin(pr_trianglefan)
draw_vertex_colour(room_width/2,650,c_yellow,1)
for (i=0;i!=global.variables[| 1];i++)
{
    draw_vertex_colour(room_width/2+lengthdir_x(80,i*3.6),650+lengthdir_y(80,i*3.6),c_yellow,1)
}
draw_primitive_end()
draw_circle_colour(room_width/2,650,60,background_colour,background_colour,0)
draw_set_halign(fa_middle)
draw_set_colour(c_black)
draw_set_font(fnt_ult)
draw_ult()
draw_text(400,730,"Kills to win: "+string(global.variables[| 3])+"#"+"HP: "+string(global.variables[| 2]))
if global.variables[| 2]&lt;0 or global.variables[| 3]&lt;0
{
    show_message("Congratulations! Or not.. I don't know!#I ran out of lines to properly check for a win/loss.#So if you got 0 lives, you're dead...#If you got 0 kills left, you win!##This challenge was hard :(")
    game_restart()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
